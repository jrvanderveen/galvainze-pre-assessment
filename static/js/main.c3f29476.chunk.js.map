{"version":3,"sources":["App.js","index.js"],"names":["App","useState","clickedCount","setClickedCount","seconds","setSeconds","isActive","setIsActive","useEffect","interval","setInterval","clearInterval","style","width","height","display","justifyContent","alignItems","flexDirection","marginRight","color","backgroundColor","border","padding","textAlign","textDecoration","fontSize","margin","cursor","marginLeft","onClick","Math","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0JAyFeA,MAvFf,WAAgB,IAAD,EAC6BC,mBAAS,GADtC,mBACJC,EADI,KACUC,EADV,OAEmBF,mBAAS,GAF5B,mBAEJG,EAFI,KAEKC,EAFL,OAGqBJ,oBAAS,GAH9B,mBAGJK,EAHI,KAGMC,EAHN,KA6BX,OAZAC,qBAAU,WACN,IAAIC,EAAW,KAQf,OAPIH,EACAG,EAAWC,aAAY,WACnBL,GAAW,SAACD,GAAD,OAAaA,EAAU,OACnC,KACKE,GAAwB,IAAZF,GACpBO,cAAcF,GAEX,kBAAME,cAAcF,MAC5B,CAACH,EAAUF,IAGV,sBAAKQ,MAAO,CAAEC,MAAO,QAASC,OAAQ,QAASC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAUC,cAAe,UAA/H,UACI,sBAAKN,MAAO,CAAEG,QAAS,QAAvB,UACI,oBAAIH,MAAO,CAAEO,YAAa,QAA1B,qCACA,oBAAIP,MAAO,CAAEQ,MAAO,QAApB,SAA+BlB,IAC/B,wBACIU,MAAO,CACHS,gBAAiB,UACjBC,OAAQ,OACRF,MAAO,QACPG,QAAS,YACTC,UAAW,SACXC,eAAgB,OAChBV,QAAS,eACTW,SAAU,OACVC,OAAQ,UACRC,OAAQ,UACRC,WAAY,QAEhBC,QAAS,kBA1CA,IAAjB5B,GACAK,GAAY,QAEhBJ,EAAgBD,EAAe,IAyBvB,yBAmBJ,qBAAKU,MAAO,CAAEG,QAAS,QAAvB,SACI,gDACkB,uBAAMH,MAAO,CAAEQ,MAAO,QAAtB,UAAiChB,EAAjC,YAGtB,qBAAKQ,MAAO,CAAEG,QAAS,QAAvB,SACI,oDACsB,sBAAMH,MAAO,CAAEQ,MAAO,QAAtB,SAA6C,IAAZhB,EAAgB,EAAI2B,KAAKC,MAAM9B,EAAeE,UAGzG,qBAAKQ,MAAO,CAAEG,QAAS,QAAvB,SACI,yBACIH,MAAO,CACHS,gBAAiB,UACjBC,OAAQ,OACRF,MAAO,QACPG,QAAS,YACTC,UAAW,SACXC,eAAgB,OAChBV,QAAS,eACTW,SAAU,OACVC,OAAQ,UACRC,OAAQ,UACRC,WAAY,QAEhBC,QAAS,kBAlErBvB,GAAY,GACZF,EAAW,QACXF,EAAgB,IAkDR,kBAgBU,aC9E1B8B,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.c3f29476.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction App() {\n    const [clickedCount, setClickedCount] = useState(0);\n    const [seconds, setSeconds] = useState(0);\n    const [isActive, setIsActive] = useState(false);\n\n    const handleClick = () => {\n        if (clickedCount === 0) {\n            setIsActive(true);\n        }\n        setClickedCount(clickedCount + 1);\n    };\n    const handleResetClick = () => {\n        setIsActive(false);\n        setSeconds(0);\n        setClickedCount(0);\n    };\n\n    useEffect(() => {\n        let interval = null;\n        if (isActive) {\n            interval = setInterval(() => {\n                setSeconds((seconds) => seconds + 1);\n            }, 1000);\n        } else if (!isActive && seconds !== 0) {\n            clearInterval(interval);\n        }\n        return () => clearInterval(interval);\n    }, [isActive, seconds]);\n\n    return (\n        <div style={{ width: \"100vw\", height: \"100vh\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", flexDirection: \"column\" }}>\n            <div style={{ display: \"flex\" }}>\n                <h1 style={{ marginRight: \"10px\" }}>How fast can you click:</h1>\n                <h1 style={{ color: \"grey\" }}>{clickedCount}</h1>\n                <button\n                    style={{\n                        backgroundColor: \"#4CAF50\",\n                        border: \"none\",\n                        color: \"white\",\n                        padding: \"15px 32px\",\n                        textAlign: \"center\",\n                        textDecoration: \"none\",\n                        display: \"inline-block\",\n                        fontSize: \"16px\",\n                        margin: \"4px 2px\",\n                        cursor: \"pointer\",\n                        marginLeft: \"10px\",\n                    }}\n                    onClick={() => handleClick()}\n                >\n                    CLICK ME\n                </button>\n            </div>\n            <div style={{ display: \"flex\" }}>\n                <h2>\n                    Time Elapsed: <span style={{ color: \"grey\" }}>{seconds}s</span>\n                </h2>\n            </div>\n            <div style={{ display: \"flex\" }}>\n                <h2>\n                    Click Per Second: <span style={{ color: \"grey\" }}>{seconds === 0 ? 0 : Math.floor(clickedCount / seconds)}</span>\n                </h2>\n            </div>\n            <div style={{ display: \"flex\" }}>\n                <button\n                    style={{\n                        backgroundColor: \"#f44336\",\n                        border: \"none\",\n                        color: \"white\",\n                        padding: \"15px 32px\",\n                        textAlign: \"center\",\n                        textDecoration: \"none\",\n                        display: \"inline-block\",\n                        fontSize: \"16px\",\n                        margin: \"4px 2px\",\n                        cursor: \"pointer\",\n                        marginLeft: \"10px\",\n                    }}\n                    onClick={() => handleResetClick()}\n                >\n                    RESET{\" \"}\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}